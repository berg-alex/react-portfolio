{"version":3,"sources":["assets/video-digital-info.mp4","App.js","reportWebVitals.js","index.js"],"names":["AnyReactComponent","text","style","color","background","padding","display","textAlign","alignItems","justifyContent","borderRadius","transform","App","defaultProps","center","lat","lng","zoom","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Navbar","className","dark","expand","Container","Col","xs","sm","md","lg","NavbarBrand","href","options","height","width","NavItem","marginTop","marginBottom","Button","id","bootstrapURLKeys","key","defaultCenter","defaultZoom","onGoogleApiLoaded","map","maps","yesIWantToUseGoogleMapApiInternals","opacity","autoPlay","muted","src","video","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAAe,MAA0B,+C,uBCSnCA,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACxB,qBAAKC,MAAO,CACVC,MAAO,QACPC,WAAY,OACZC,QAAS,YACTC,QAAS,cACTC,UAAW,SACXC,WAAY,SACZC,eAAgB,SAChBC,aAAc,OACdC,UAAW,yBATb,SAWGV,KA8FUW,MA1Ff,WACE,IAAMC,EAAe,CACnBC,OAAQ,CACNC,IAAK,QACLC,KAAM,UAERC,KAAM,GAIFC,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,iBAAkB,CAChBC,oBAAqB,mBAQzB,OACE,gCACE,8BACE,cAACC,EAAA,EAAD,CAAQC,UAAU,QAAQtB,MAAM,OAAOuB,MAAI,EAACC,OAAO,KAAnD,SACE,eAACC,EAAA,EAAD,WAEE,cAACC,EAAA,EAAD,CAAKJ,UAAU,WAAWK,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAApD,SACE,eAACC,EAAA,EAAD,CAAaC,KAAK,IAAlB,wBAAiC,uBAAjC,KAAwC,uBAAxC,6BAGF,cAACN,EAAA,EAAD,CAAKJ,UAAU,YAAYK,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAArD,SACE,cAAC,IAAD,CACEG,QAASlB,EACTmB,OAAQ,IACRC,MAAO,QAGX,eAACT,EAAA,EAAD,CAAKJ,UAAU,WAAWK,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAApD,UACE,cAACM,EAAA,EAAD,CAASd,UAAU,WAAWvB,MAAO,CAACsC,UAAW,OAAQC,aAAc,QAAvE,SACE,cAACC,EAAA,EAAD,CAAQjB,UAAU,YAAYU,KAAK,IAAIjC,MAAO,CAACoC,MAAO,SAAtD,uBAIF,cAACC,EAAA,EAAD,CAASd,UAAU,WAAWvB,MAAO,CAACuC,aAAc,QAApD,SACA,cAACC,EAAA,EAAD,CAAQjB,UAAU,YAAYU,KAAK,IAAIjC,MAAO,CAACoC,MAAO,SAAtD,yBAIA,cAACC,EAAA,EAAD,CAASd,UAAU,WAAWvB,MAAO,CAACuC,aAAc,QAApD,SACA,cAACC,EAAA,EAAD,CAAQjB,UAAU,YAAYU,KAAK,IAAIjC,MAAO,CAACoC,MAAO,SAAtD,yCAQV,cAACV,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAA/B,SACE,qBAAKR,UAAU,SAASkB,GAAG,WAA3B,SACE,cAAC,IAAD,CACEC,iBAAkB,CAAEC,IAAK,IACzBC,cAAejC,EAAaC,OAC5BiC,YAAalC,EAAaI,KAC1B+B,kBAAmB,cAAGC,IAAH,EAAQC,MAC3BC,oCAAoC,EALtC,SAOA,cAAC,EAAD,CACEpC,IAAK,QACLC,KAAM,SACNf,KAAK,sBAQb,wBAAOqC,MAAM,QAAQc,QAAQ,KAAKC,UAAU,EAAMlC,MAAI,EAACmC,OAAK,EAA5D,UACE,wBAAQC,IAAKC,EAAOC,KAAK,cAD3B,8DC9FWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.864da15d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/video-digital-info.910e8a45.mp4\";","import React from \"react\";\nimport { Navbar, NavbarBrand, NavItem, Button, Row, Col, Container } from 'reactstrap';\nimport GoogleMapReact from 'google-map-react';\nimport Lottie from 'react-lottie';\nimport animationData from './assets/66205-coding';\nimport video from \"./assets/video-digital-info.mp4\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst AnyReactComponent = ({ text }) => (\n  <div style={{\n    color: 'white', \n    background: 'grey',\n    padding: '15px 10px',\n    display: 'inline-flex',\n    textAlign: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '100%',\n    transform: 'translate(-50%, -50%)'\n  }}>\n    {text}\n  </div>\n);\n\nfunction App() {\n  const defaultProps = {\n    center: {\n      lat: 37.8272,\n      lng: -122.2913\n    },\n    zoom: 5\n  };\n  \n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\"\n    }\n  };\n\n  const handleApiLoaded = (map, maps) => {\n    // use map and maps objects\n  };\n\n  return (\n    <div>\n      <nav>\n        <Navbar className='mynav' color=\"dark\" dark expand=\"md\">\n          <Container>\n          \n            <Col className=\"navbrand\" xs=\"12\" sm=\"12\" md=\"4\" lg=\"4\">\n              <NavbarBrand href=\"/\">Web Design <br/>& <br/> Frontend Development</NavbarBrand>\n            </Col>\n\n            <Col className=\"my-lottie\" xs=\"12\" sm=\"12\" md=\"5\" lg=\"5\">\n              <Lottie \n                options={defaultOptions}\n                height={400}\n                width={400}\n              />\n            </Col>\n            <Col className=\"navLinks\" xs=\"12\" sm=\"12\" md=\"3\" lg=\"3\">  \n              <NavItem className=\"navitems\" style={{marginTop: \"20px\", marginBottom: \"20px\"}}>\n                <Button className=\"navbutton\" href=\"/\" style={{width: \"150px\"}}>Skills </Button>\n              </NavItem>\n              \n              \n              <NavItem className=\"navitems\" style={{marginBottom: \"20px\"}}>\n              <Button className=\"navbutton\" href=\"/\" style={{width: \"150px\"}}>About Me </Button>\n              </NavItem>\n              \n              \n              <NavItem className=\"navitems\" style={{marginBottom: \"20px\"}}>\n              <Button className=\"navbutton\" href=\"/\" style={{width: \"150px\"}}>Qualifications </Button>\n              </NavItem>\n            </Col>\n\n          </Container>\n\n        </Navbar>\n      </nav>\n    <Container>\n      <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\n        <div className=\"my-map\" id=\"map-size\">\n          <GoogleMapReact\n            bootstrapURLKeys={{ key: \"\" }}\n            defaultCenter={defaultProps.center}\n            defaultZoom={defaultProps.zoom}\n            onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\n            yesIWantToUseGoogleMapApiInternals={true}\n          >\n          <AnyReactComponent\n            lat={37.8272}\n            lng={-122.2913}\n            text=\"My Marker\"\n          />\n          \n          </GoogleMapReact>\n          \n        </div>\n      </Col>\n    </Container>\n    <video width=\"100vw\" opacity=\"60\" autoPlay={true} loop muted >\n      <source src={video} type=\"video/mp4\" />\n\n      Sorry, your browser doesn't support embedded videos.\n    </video> \n  </div>\n);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}